//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeoSoftTest.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NeoSoftDBEntities : DbContext
    {
        public NeoSoftDBEntities()
            : base("name=NeoSoftDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblCity> tblCities { get; set; }
        public virtual DbSet<tblCountry> tblCountries { get; set; }
        public virtual DbSet<tblNeoData> tblNeoDatas { get; set; }
        public virtual DbSet<tblState> tblStates { get; set; }
    
        public virtual ObjectResult<tblNeoData> fn_NeoCreate(string emailAddress, Nullable<int> countryId, Nullable<int> stateId, Nullable<int> cityId, string panNumebr, string passportNumber, string profileImage, string gender, Nullable<bool> isActive)
        {
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var panNumebrParameter = panNumebr != null ?
                new ObjectParameter("PanNumebr", panNumebr) :
                new ObjectParameter("PanNumebr", typeof(string));
    
            var passportNumberParameter = passportNumber != null ?
                new ObjectParameter("PassportNumber", passportNumber) :
                new ObjectParameter("PassportNumber", typeof(string));
    
            var profileImageParameter = profileImage != null ?
                new ObjectParameter("ProfileImage", profileImage) :
                new ObjectParameter("ProfileImage", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblNeoData>("fn_NeoCreate", emailAddressParameter, countryIdParameter, stateIdParameter, cityIdParameter, panNumebrParameter, passportNumberParameter, genderParameter, isActiveParameter, profileImageParameter);
        }
    
        public virtual ObjectResult<tblNeoData> fn_NeoCreate(string emailAddress, Nullable<int> countryId, Nullable<int> stateId, Nullable<int> cityId, string panNumebr, string passportNumber, string gender, Nullable<bool> isActive, string profileImage, MergeOption mergeOption)
        {
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var stateIdParameter = stateId.HasValue ?
                new ObjectParameter("StateId", stateId) :
                new ObjectParameter("StateId", typeof(int));
    
            var cityIdParameter = cityId.HasValue ?
                new ObjectParameter("CityId", cityId) :
                new ObjectParameter("CityId", typeof(int));
    
            var panNumebrParameter = panNumebr != null ?
                new ObjectParameter("PanNumebr", panNumebr) :
                new ObjectParameter("PanNumebr", typeof(string));
    
            var passportNumberParameter = passportNumber != null ?
                new ObjectParameter("PassportNumber", passportNumber) :
                new ObjectParameter("PassportNumber", typeof(string));
    
            var profileImageParameter = profileImage != null ?
                new ObjectParameter("ProfileImage", profileImage) :
                new ObjectParameter("ProfileImage", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblNeoData>("fn_NeoCreate", mergeOption, emailAddressParameter, countryIdParameter, stateIdParameter, cityIdParameter, panNumebrParameter, passportNumberParameter, profileImageParameter, genderParameter, isActiveParameter);
        }
    
        public virtual ObjectResult<tblNeoData> fn_GetData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblNeoData>("fn_GetData");
        }
    
        public virtual ObjectResult<tblNeoData> fn_GetData(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tblNeoData>("fn_GetData", mergeOption);
        }
    }
}
